{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww23180\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs34 \cf0 \ul \ulc0 Task0:
\f1\b0\fs24 \ulnone \
\

\f0\b \ul Input
\f1\b0 \ulnone : calls & texts data set is the input for this problem\

\f0\b \ul Output
\f1\b0 \ulnone : Numbers regarding the first & last from the two data set\

\f0\b \ul Analysis
\f1\b0 \ulnone : O(1), since finding the data at a particular index is independent of the size of data set, this operation can be computed in constant time.\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\f0\b\fs34 \ul Task1:\

\fs24 Input
\f1\b0 \ulnone : calls & texts data set is the input for this problem\

\f0\b \ul Output
\f1\b0 \ulnone : Unique phone numbers from the two input data sets\

\f0\b \ul Analysis
\f1\b0 \ulnone : O(n), since finding unique numbers will require to go through the whole list of size n.\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\f0\b\fs34 \ul Task2:\

\fs24 Input
\f1\b0 \ulnone : calls data set is the input for this problem\

\f0\b \ul Output
\f1\b0 \ulnone : Maximum time spent and the calling number associated with it\

\f0\b \ul Analysis
\f1\b0 \ulnone : O(n^2), since this requires going over the while loop within another while loop so time complexity is O(n^2). We are also storing the the filtered data in another data structure which depends on the size of data. So worst case time & space complexity will be O(n) for both.\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\f0\b\fs34 \ul Task3 (a):\

\fs24 Input
\f1\b0 \ulnone : calls data set\

\f0\b \ul Output
\f1\b0 \ulnone : Print the list of unique area codes called from the number with prefix 080.\

\f0\b \ul Analysis
\f1\b0 \ulnone : O(nlogn), there are two competing operation for time complexity 1) Getting unique prefixes requires O(n) 2) sorting the set requires O(nlogn). O(nlogn) being the higher is the time complexity for this problem. Space complexity is O(n)\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\f0\b\fs34 \ul Task3 (b):\

\fs24 Input
\f1\b0 \ulnone : calls data set\

\f0\b \ul Output
\f1\b0 \ulnone : Percentage of calls to & from Bangalore.\

\f0\b \ul Analysis
\f1\b0 \ulnone : O(n), Filtering unique prefix codes takes O(n) and rest of the operations take constant time. So the Time complexity is O(n). Space complexity is O(n)\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\

\f0\b\fs34 \ul Task4:\

\fs24 Input
\f1\b0 \ulnone : calls & texts data set\

\f0\b \ul Output
\f1\b0 \ulnone : List of possible telemarketers\

\f0\b \ul Analysis
\f1\b0 \ulnone : O(nlogn), Filtering set takes O(n). Sorting a set takes O(nlogn), so the time complexity is O(nlogn).\
\
\
}